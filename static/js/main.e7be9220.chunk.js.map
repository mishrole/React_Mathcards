{"version":3,"sources":["utils/generateOperation.js","utils/generateOptions.js","utils/shuffleOptions.js","helpers/getQuestions.js","utils/generateOperator.js","context/mainContext.js","hooks/useQuestions.js","components/home/OperationCard.js","pages/_home/index.js","components/questions/Operation.js","pages/_questions/index.js","router/index.js","index.js"],"names":["generateOperation","generateRandomNumber","Math","floor","random","generateOptions","currentAnswer","optionsAmount","options","length","i","actualRandomNumber","includes","push","randomOptions","sort","getQuestions","a","questions","map","question","answer","operator","operatorName","currentNumbers","currentOptions","id","UUID","v4","questionIndex","questionName","questionNumbers","questionOperator","questionOperatorName","answerOptions","answerExpected","userAnswer","MainContext","createContext","MainContextProvider","children","useState","data","state","setState","useEffect","then","updateUserAnswer","questionId","find","Object","assign","useQuestions","Provider","value","OperationCard","history","useHistory","Card","className","Header","Body","Title","Text","Footer","Button","variant","onClick","generatePath","disabled","OperationGrid","useContext","Navbar","bg","Brand","Nav","to","Container","Row","index","Col","xs","sm","lg","Operation","src","onChange","useParams","currentQuestion","objectQuestions","currentIndex","object","currentId","prop","hasOwnProperty","getCurrentIndex","handleClickOptions","e","Number","target","innerText","console","log","undefined","md","as","Alert","xmlns","width","height","fill","viewBox","d","previousIndex","parseInt","values","fillRule","nextIndex","nextObject","OperationQuest","url","setUrl","Root","path","component","from","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7be9220.chunk.js","sourcesContent":["export const generateOperation = () => {\r\n\r\n    const generateRandomNumber = () => {\r\n        return Math.floor(Math.random()*21);\r\n    }\r\n\r\n    return [generateRandomNumber(), generateRandomNumber()]\r\n}","import { shuffleOptions } from \"./shuffleOptions\";\r\n\r\nexport const generateOptions = (currentAnswer, optionsAmount) => {\r\n\r\n    const generateRandomOption = () => {\r\n        return Math.floor(Math.random()*(currentAnswer*optionsAmount));\r\n    }\r\n\r\n    const randomOptions = () => {\r\n\r\n        let options = [];\r\n\r\n        if(options.length <= optionsAmount) {\r\n            for (let i = 0; i < optionsAmount; i++) {\r\n\r\n                let actualRandomNumber = generateRandomOption();\r\n    \r\n                if(currentAnswer === actualRandomNumber || options.includes(actualRandomNumber)) {\r\n                    optionsAmount += 1;\r\n                } else {\r\n                    options.push(actualRandomNumber); \r\n                }\r\n                          \r\n            }\r\n        }\r\n\r\n        return [currentAnswer, ...options]\r\n    }\r\n\r\n    return shuffleOptions(randomOptions())\r\n}","export const shuffleOptions = (options) => {\r\n    return options.sort(() => Math.random() - 0.5);\r\n}","import { default as UUID } from \"uuid\";\r\nimport { generateOperation } from \"../utils/generateOperation\";\r\nimport { generateOperator } from \"../utils/generateOperator\";\r\nimport { generateOptions } from \"../utils/generateOptions\";\r\n\r\nexport const getQuestions = async () => {\r\n\r\n    const data = ['Pregunta 1', 'Pregunta 2', 'Pregunta 3', 'Pregunta 4', 'Pregunta 5', 'Pregunta 6'];\r\n\r\n    const questions = data.map(question => {\r\n\r\n        const currentNumbers = generateOperation();\r\n        const currentOperator = generateOperator();\r\n        \r\n        let answer, operator, operatorName;\r\n\r\n        if(currentOperator === 0) {\r\n            operator = \"+\";\r\n            operatorName = \"Suma\";\r\n            answer = currentNumbers[0] + currentNumbers[1];\r\n        } else {\r\n            operator = \"-\";\r\n            operatorName = \"Resta\";\r\n            answer = currentNumbers[0] - currentNumbers[1];\r\n        }\r\n\r\n        const currentOptions = generateOptions(answer, 2);\r\n\r\n        return {\r\n            id: UUID.v4(),\r\n            questionIndex: question,\r\n            questionName: `¿Cuánto es ${ currentNumbers[0] } ${ operator } ${ currentNumbers[1] }?`,\r\n            questionNumbers: currentNumbers,\r\n            questionOperator: operator,\r\n            questionOperatorName: operatorName,\r\n            answerOptions: currentOptions,\r\n            answerExpected: answer,\r\n            userAnswer: \"\"\r\n        }\r\n    });\r\n\r\n    return questions;\r\n}","export const generateOperator = () => {\r\n\r\n    const generateRandomOperator = () => {\r\n        return Math.floor(Math.random()*2);\r\n    }\r\n\r\n    return generateRandomOperator()\r\n}","import { createContext } from 'react';\r\nimport { useQuestions } from '../hooks/useQuestions';\r\n\r\nconst MainContext = createContext();\r\n\r\nconst MainContextProvider = ({ children }) => {\r\n\r\n    const { state: { data: questions}, updateUserAnswer } = useQuestions();\r\n\r\n    return (\r\n        <MainContext.Provider value = { { questions, updateUserAnswer }}>\r\n            { children }\r\n        </MainContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MainContext;\r\n\r\nexport { MainContextProvider };","// import produce from 'immer';\r\nimport { useState, useEffect } from 'react';\r\nimport { getQuestions } from '../helpers/getQuestions';\r\n\r\nexport const useQuestions = () => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: []\r\n    });\r\n\r\n    // Get questions + UUID\r\n\r\n    useEffect(() => {\r\n        getQuestions()\r\n        .then(question => {\r\n            setState({\r\n                data: question\r\n            })\r\n        })\r\n    }, []);\r\n\r\n    // Update Answer (context, id, newAnswer)\r\n\r\n    const updateUserAnswer = (questions, questionId, userAnswer) => {\r\n\r\n        const question = questions.find(({ id }) =>  id === questionId);\r\n\r\n        if(question) {\r\n            setState(() => {\r\n                question.userAnswer = userAnswer;\r\n                return { data: Object.assign(questions, question) }\r\n            })\r\n        }\r\n    };\r\n\r\n    return { state, updateUserAnswer };\r\n}\r\n","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { generatePath, useHistory } from 'react-router-dom';\r\n\r\nexport const OperationCard = ( { question }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClick = (questionId) => () => {\r\n        history.push(generatePath(\"/question/:questionId\", { questionId }));   \r\n    }\r\n\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>{ question.questionIndex }</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Operación de { question.questionOperatorName }</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">\r\n                {\r\n                    question.userAnswer === \"\"\r\n                    ?\r\n                    (\r\n                        <Button variant=\"primary\" onClick = { handleClick(question.id) }>Resolver</Button>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Button variant=\"secondary\" disabled>Resuelto</Button>\r\n                    )\r\n                }\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { OperationCard } from '../../components/home/OperationCard';\r\nimport { Container, Row, Col, Nav, Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport MainContext from '../../context/mainContext';\r\n\r\nexport const OperationGrid = () => {\r\n\r\n    const { questions } = useContext(MainContext);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>Mathcards</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link className=\"nav-link\" to={`/home`}>Home</Link>\r\n                    </Nav>\r\n                </Navbar>\r\n            <Container>\r\n                <Row>\r\n                    {\r\n                        questions.map((question, index) => {\r\n                            return (\r\n                                <Col className=\"mt-4 mb-4\" xs = { 12 } sm = { 6 } lg = { 4 } key = { `questionContainer-${ index }` }>\r\n                                    <OperationCard question = { question }/>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n        \r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { Card, Button, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { useParams, generatePath, useHistory } from \"react-router-dom\";\r\nimport MainContext from \"../../context/mainContext\";\r\n\r\nexport const Operation = ({ src, onChange = () => {} }) => {\r\n  const history = useHistory();\r\n\r\n  const { questionId } = useParams();\r\n  const { questions, updateUserAnswer } = useContext(MainContext);\r\n\r\n  const currentQuestion = questions.find(({ id }) => id === questionId);\r\n\r\n  const getCurrentIndex = (object, currentId) => {\r\n    for (var prop in object) {\r\n      if (object.hasOwnProperty(prop)) {\r\n        if (object[prop].id === currentId.id) {\r\n          return prop;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const objectQuestions = { ...questions };\r\n  const currentIndex = getCurrentIndex(objectQuestions, currentQuestion);\r\n\r\n  const handleClickPrevious = () => {\r\n    const previousIndex = parseInt(currentIndex) - 1;\r\n    let previousObject;\r\n\r\n    if (previousIndex < 0) {\r\n      previousObject = Object.values(objectQuestions)[\r\n        parseInt(questions.length) - 1\r\n      ];\r\n    } else {\r\n      previousObject = Object.values(objectQuestions)[previousIndex];\r\n    }\r\n\r\n    let questionId = previousObject.id;\r\n    history.push(generatePath(\"/question/:questionId\", { questionId }));\r\n  };\r\n\r\n  const handleClickNext = () => {\r\n    const nextIndex = parseInt(currentIndex) + 1;\r\n    const nextObject = Object.values(objectQuestions)[nextIndex];\r\n    let questionId;\r\n\r\n    if (nextIndex < questions.length) {\r\n      questionId = nextObject.id;\r\n      history.push(generatePath(\"/question/:questionId\", { questionId }));\r\n    } else {\r\n      questionId = Object.values(objectQuestions)[0].id;\r\n      history.push(generatePath(\"/question/:questionId\", { questionId }));\r\n    }\r\n  };\r\n\r\n  const handleClickOptions = (e) => {\r\n    updateUserAnswer(questions, questionId, Number(e.target.innerText));\r\n    console.log(questions);\r\n  }\r\n  \r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {currentQuestion === undefined ? (\r\n          history.push(generatePath(\"/home\"))\r\n        ) : (\r\n          <Col xs={12} md={6} className=\"mt-4 mb-4 mx-auto\">\r\n            <Card>\r\n              <Card.Header className=\"text-center\">\r\n                {currentQuestion.questionIndex}\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Card.Title className=\"text-center mt-3 mb-5\" as=\"h5\">\r\n                  {currentQuestion.questionName}\r\n                </Card.Title>\r\n                <Card.Text></Card.Text>\r\n                <Row className=\"mt-4 mb-3 text-center d-flex\">\r\n                    {\r\n                        currentQuestion.userAnswer === \"\"\r\n                        ?\r\n                        (\r\n                            currentQuestion.answerOptions.map((options, index) => (\r\n                                <Col xs={4} key={`options-${index}`}>\r\n                                    <Button variant=\"primary\" value = { options } onClick = { handleClickOptions } >{options}</Button>\r\n                                </Col>\r\n                              ))\r\n                        )\r\n                        :\r\n                        (\r\n                            currentQuestion.userAnswer === currentQuestion.answerExpected\r\n                            ?\r\n                            (\r\n                                <div className=\"d-flex flex-column col-sm-12\">\r\n                                    <Alert variant = \"success\" className = \"text-center\">\r\n                                    <div className=\"mt-4 mb-4\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#198754\" className=\"bi bi-emoji-smile\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                            <path d=\"M4.285 9.567a.5.5 0 0 1 .683.183A3.498 3.498 0 0 0 8 11.5a3.498 3.498 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.498 4.498 0 0 1 8 12.5a4.498 4.498 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z\"/>\r\n                                        </svg>\r\n                                       \r\n                                    </div>\r\n                                    <h1 className=\"pb-4\">¡Correcto!</h1>\r\n                                    La respuesta es { currentQuestion.answerExpected}\r\n                                    </Alert>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (\r\n                                <div className=\"d-flex flex-column col-sm-12\">\r\n                                    <Alert variant = \"danger\" className = \"text-center\">\r\n                                    <div className=\"mt-4 mb-4\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"#dc3545\" className=\"bi bi-emoji-frown\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                        <path d=\"M4.285 12.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 10.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 9.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z\"/>\r\n                                    </svg>\r\n                                    </div>\r\n                                    <h1 className=\"pb-4\">¡Oh no!</h1>\r\n                                    La respuesta correcta es { currentQuestion.answerExpected}\r\n                                    </Alert>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n\r\n      <div className=\"d-flex justify-content-around\">\r\n        <Button variant=\"secondary\" onClick = { handleClickPrevious }>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-arrow-left\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\r\n            />\r\n          </svg>{\" \"}\r\n          Anterior\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick = { handleClickNext }>\r\n          Siguiente{\" \"}\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-arrow-right\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\r\n            />\r\n          </svg>\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","// import React, { useState, useContext, useMemo } from 'react';\r\nimport React, { useState } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Operation } from \"../../components/questions/Operation\";\r\nexport const OperationQuest = () => {\r\n\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    const handleChange = ({ url }) => {\r\n        setUrl(url);\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>Mathcards</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Link className=\"nav-link\" to={`/home`}>Home</Link>\r\n                </Nav>\r\n            </Navbar>\r\n\r\n            <Container>\r\n                <Operation src = { url } onChange = { handleChange } />\r\n            </Container>\r\n        </>\r\n    )\r\n}","import { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { MainContextProvider } from '../context/mainContext';\r\nimport { OperationGrid } from '../pages/_home';\r\nimport { OperationQuest } from '../pages/_questions';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <MainContextProvider>\r\n            <Switch>\r\n                <Route path=\"/home\" component={OperationGrid} />\r\n                <Route path=\"/question/:questionId\" component={OperationQuest} />\r\n                <Redirect from=\"/\" to=\"/home\" />\r\n            </Switch>\r\n        </MainContextProvider>\r\n    )\r\n}\r\n\r\nexport default Root;","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Root from './router/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <Root />\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);"],"sourceRoot":""}